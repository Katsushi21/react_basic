{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Ore/Desktop/react-basic/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n/* import Basic2 from './components/Basic2'\nimport BasicUseEffect from './components/Timer'\nimport TimerContainer from './components/TimerContainer' */\n\nimport AppContext from './contexts/AppContext'; // import B from './components/B';\n// import BasicReducer from './components/BasicReducer';\n// import CompB from './components/CompB';\n\nimport { useReducer } from 'react'; // import Memo from './components/Memo'\n\nimport CountDisplay from './components/CountDisplay';\nimport CountClick from './components/CountClick';\nconst initialState = 0;\n\nconst reducer = (currentState, action) => {\n  switch (action) {\n    case 'add_1':\n      return currentState + 1;\n\n    case 'multiple_3':\n      return currentState * 3;\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return currentState;\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [count, dispatch] = useReducer(reducer, initialState);\n  const [count1, setCount1] = useState(0);\n  const [count2, setCount2] = useState(0);\n\n  const AddCount1 = () => {\n    setCount1(prevCount1 => prevCount1 + 1);\n  };\n\n  const AddCount2 = () => {\n    setCount2(prevCount2 => prevCount2 + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      countProvided: count,\n      dispatchProvided: dispatch\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CountDisplay, {\n          name: \"count1\",\n          count: count1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CountClick, {\n          handleClick: AddCount1,\n          children: \"AddCount1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CountDisplay, {\n          name: \"count2\",\n          count: count2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CountClick, {\n          handleClick: AddCount2,\n          children: \"AddCount2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ugqAI66GPSI8H0LqBhGOC1RfdIE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Ore/Desktop/react-basic/src/App.js"],"names":["React","AppContext","useReducer","CountDisplay","CountClick","initialState","reducer","currentState","action","App","count","dispatch","count1","setCount1","useState","count2","setCount2","AddCount1","prevCount1","AddCount2","prevCount2","countProvided","dispatchProvided","logo"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB,C,CACA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,OAA3B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,MAAMC,YAAY,GAAG,CAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,YAAD,EAAeC,MAAf,KAA0B;AACxC,UAAQA,MAAR;AACE,SAAK,OAAL;AACE,aAAOD,YAAY,GAAG,CAAtB;;AACF,SAAK,YAAL;AACE,aAAOA,YAAY,GAAG,CAAtB;;AACF,SAAK,OAAL;AACE,aAAOF,YAAP;;AACF;AACE,aAAOE,YAAP;AARJ;AAUD,CAXD;;AAaA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACI,OAAD,EAAUD,YAAV,CAApC;AAEA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMG,SAAS,GAAG,MAAM;AACtBJ,IAAAA,SAAS,CAACK,UAAU,IAAIA,UAAU,GAAG,CAA5B,CAAT;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtBH,IAAAA,SAAS,CAACI,UAAU,IAAIA,UAAU,GAAG,CAA5B,CAAT;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAEX,KAAjB;AAAwBY,MAAAA,gBAAgB,EAAEX;AAA1C,KAA5B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEY,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,KAAK,EAAEX;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,UAAD;AAAY,UAAA,WAAW,EAAEK,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,KAAK,EAAEF;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE,QAAC,UAAD;AAAY,UAAA,WAAW,EAAEI,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GApCQV,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n/* import Basic2 from './components/Basic2'\nimport BasicUseEffect from './components/Timer'\nimport TimerContainer from './components/TimerContainer' */\nimport AppContext from './contexts/AppContext';\n// import B from './components/B';\n// import BasicReducer from './components/BasicReducer';\n// import CompB from './components/CompB';\nimport { useReducer } from 'react'\n// import Memo from './components/Memo'\nimport CountDisplay from './components/CountDisplay';\nimport CountClick from './components/CountClick';\n\nconst initialState = 0\nconst reducer = (currentState, action) => {\n  switch (action) {\n    case 'add_1':\n      return currentState + 1\n    case 'multiple_3':\n      return currentState * 3\n    case 'reset':\n      return initialState\n    default:\n      return currentState\n  }\n}\n\nfunction App() {\n  const [count, dispatch] = useReducer(reducer, initialState)\n\n  const [count1, setCount1] = useState(0)\n  const [count2, setCount2] = useState(0)\n\n  const AddCount1 = () => {\n    setCount1(prevCount1 => prevCount1 + 1)\n  }\n\n  const AddCount2 = () => {\n    setCount2(prevCount2 => prevCount2 + 1)\n  }\n\n  return (\n    <AppContext.Provider value={{ countProvided: count, dispatchProvided: dispatch }}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {/* <Basic2/> */}\n          {/* <BasicUseEffect/> */}\n          {/* <TimerContainer /> */}\n          {/* <B /> */}\n          {/* <BasicReducer /> */}\n          {/* Count {count} */}\n          {/* <CompB /> */}\n          {/* <Memo /> */}\n          <CountDisplay name=\"count1\" count={count1} />\n          <CountClick handleClick={AddCount1}>AddCount1</CountClick>\n          <CountDisplay name=\"count2\" count={count2} />\n          <CountClick handleClick={AddCount2}>AddCount2</CountClick>\n\n        </header>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}